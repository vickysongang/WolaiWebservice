diff --git a/websocket/session_handler.go b/websocket/session_handler.go
index 1749a40..1d1bba5 100644
--- a/websocket/session_handler.go
+++ b/websocket/session_handler.go
@@ -368,6 +368,22 @@ func sessionHandler(sessionId int64) {
 						teacherChan <- sessionStatusMsg
 					}
 
+					if SessionManager.IsSessionPaused(sessionId) {
+						syncMsg := NewWSMessage("", session.Tutor, WS_SESSION_STATUS_SYNC)
+						syncMsg.Attribute["errCode"] = "0"
+						sessionStatus, _ := SessionManager.GetSessionStatus(sessionId)
+						syncMsg.Attribute["sessionStatus"] = sessionStatus
+						_, tutorInfo := sessionController.GetSessionInfo(sessionId, session.Tutor)
+						tutorInfoByte, _ := json.Marshal(tutorInfo)
+						syncMsg.Attribute["sessionInfo"] = string(tutorInfoByte)
+
+						if !UserManager.HasUserChan(session.Tutor) {
+							break
+						}
+						tutorChan := UserManager.GetUserChan(session.Tutor)
+						tutorChan <- syncMsg
+					}
+
 				case WS_SESSION_RECOVER_STU:
 					//如果学生所在的课程正在进行中，继续计算时间，防止切网时掉网重连时间计算错误
 					if !SessionManager.IsSessionPaused(sessionId) &&
@@ -411,6 +427,22 @@ func sessionHandler(sessionId int64) {
 						studentChan <- sessionStatusMsg
 					}
 
+					if SessionManager.IsSessionPaused(sessionId) {
+						syncMsg := NewWSMessage("", session.Creator, WS_SESSION_STATUS_SYNC)
+						syncMsg.Attribute["errCode"] = "0"
+						sessionStatus, _ := SessionManager.GetSessionStatus(sessionId)
+						syncMsg.Attribute["sessionStatus"] = sessionStatus
+						_, studentInfo := sessionController.GetSessionInfo(sessionId, session.Creator)
+						studentByte, _ := json.Marshal(studentInfo)
+						syncMsg.Attribute["sessionInfo"] = string(studentByte)
+
+						if !UserManager.HasUserChan(session.Creator) {
+							break
+						}
+						studentChan := UserManager.GetUserChan(session.Creator)
+						studentChan <- syncMsg
+					}
+
 				case WS_SESSION_PAUSE: //课程暂停
 					//向老师发送课程暂停的响应消息
 					pauseResp := NewWSMessage(msg.MessageId, msg.UserId, WS_SESSION_PAUSE_RESP)
diff --git a/websocket/session_handler.go b/websocket/session_handler.go
index ed8c84b..7f092ae 100644
--- a/websocket/session_handler.go
+++ b/websocket/session_handler.go
@@ -128,6 +128,18 @@ func sessionHandler(sessionId int64) {
 
 			//课后结算，产生交易记录
 			SendSessionReport(sessionId, false)
+
+			if TeacherManager.IsTeacherAssignOpen(session.Tutor) {
+				assignOffMsg := NewWSMessage("", session.Tutor, WS_ORDER2_TEACHER_ASSIGNOFF_RESP)
+				if err := TeacherManager.SetAssignOff(session.Tutor); err == nil {
+					assignOffMsg.Attribute["errCode"] = "0"
+					if UserManager.HasUserChan(session.Tutor) {
+						tutorChan := UserManager.GetUserChan(session.Tutor)
+						tutorChan <- assignOffMsg
+					}
+				}
+			}
+
 			go lcmessage.SendSessionExpireMsg(sessionId)
 
 			UserManager.RemoveUserSession(sessionId, session.Tutor, session.Creator)
